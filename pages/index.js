import Head from "next/head";
import { useState } from "react";
import styles from "../styles/Home.module.css";
import data from "../public/Image.json";
import { CloudinaryContext, Transformation, Image } from "cloudinary-react";
import { Form, Button, Col, Row } from "react-bootstrap";
import Card from "../Components/Card";

export default function Home() {
  const [currentImage, setCurrentImage] = useState(null);
  const [textColor, setTextColor] = useState(null);
  const [showCard, setShowCard] = useState(false);
  const [formData, setFormData] = useState({
    message: "",
    name: "",
    publicId: "",
  });
  const handleChange = (e) => {
    setFormData({ ...formData, [e.target.name]: e.target.value });
  };
  return (
    <div className="container-lg d-flex justify-content-between align-items-center">
      <Head>
        <title>Easter Card Generator </title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className="p-auto">Easter Card Generator</h1>
        <CloudinaryContext cloudName="Kizmelvin">
          <label className="p-2 mt-3 fs-3">Select an image</label>
          <Row>
            {data.map((img) => (
              <Col
                className={styles.card}
                key={img.id}
                onClick={() => {
                  setFormData({
                    publicId: img.publicId,
                  });
                  setCurrentImage(img.id);
                  setTextColor(img.textColor);
                }}
              >
                <Image publicId={img.publicId}>
                  <Transformation crop="scale" width="100" height="80" />
                </Image>
              </Col>
            ))}
          </Row>
        </CloudinaryContext>
        {currentImage ? (
          <label className="mt-2 text-success fw-bolder">
            Image: {currentImage} selected!
          </label>
        ) : (
          <label className="mt-2">No Image selected.</label>
        )}
        <Form className="mt-3">
          <Form.Group className="mb-3" controlId="exampleForm.ControlTextarea1">
            <Form.Label className="fs-4">Message</Form.Label>
            <Form.Control
              size="lg"
              as="textarea"
              rows={3}
              maxLength={100}
              required
              name="message"
              onChange={handleChange}
              value={formData.message}
              placeholder="write your message"
            />
          </Form.Group>

          <Form.Group className="mb-3 h-10">
            <Form.Label className="fs-4">Name</Form.Label>
            <Form.Control
              size="lg"
              type="text"
              name="name"
              required
              onChange={handleChange}
              value={formData.name}
              placeholder="Your name"
            />
          </Form.Group>
          <Button
            onClick={(e) => {
              e.preventDefault();
              setShowCard(true);
            }}
            type="submit"
            variant="success"
          >
            Create Card
          </Button>
        </Form>
      </main>
      {showCard && (
        <Card
          name={formData.name}
          message={formData.message}
          publicId={formData.publicId}
          textColor={textColor}
        />
      )}
    </div>
  );
}
